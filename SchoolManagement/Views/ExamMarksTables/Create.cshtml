@model DatabasAccess.ExamMarksTable

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>
<script src="~/Scripts/jquery-3.4.1.min.js"></script>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>ExamMarksTable</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    <input type="number" class="form-control" placeholder="Enter Promote ID" id="promoteid" />
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    <input type="button" class="btn btn-primary" value="find" id="FindPromoterecord" />
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StudentID, "StudentID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("StudentID", null, htmlAttributes: new { @class = "form-control", id = "StudentID" })
                @Html.ValidationMessageFor(model => model.StudentID, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ExamID, "ExamID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ExamID", null, htmlAttributes: new { @class = "form-control", id = "ExamID" })
                @Html.ValidationMessageFor(model => model.ExamID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ClassSubjectID, "ClassSubjectID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ClassSubjectID", null, htmlAttributes: new { @class = "form-control", id = "ClassSubjectID" })
                @Html.ValidationMessageFor(model => model.ClassSubjectID, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.TotalMarks, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TotalMarks, new { htmlAttributes = new { @class = "form-control", id = "TotalMarks" } })
                @Html.ValidationMessageFor(model => model.TotalMarks, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ObtainMarks, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ObtainMarks, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ObtainMarks, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<script type="text/javascript">
$(document).ready(function () {
    $('#FindPromoterecord').click(function () {
        $('#ClassSubjectID').html('');  // Clear previous options before AJAX call
        $('#StudentID').html('');       // Clear previous options before AJAX call
        $.ajax({
            url: '@Url.Action("GetByPromoteID", "ExamMarksTables")',
            type: 'GET',
            data: { sid: $('#promoteid').val() },
            dataType: 'json',
            success: function (response) {
                if (response.error) {
                    console.error(response.error);
                    alert(response.error);
                } else {
                    $('#StudentID').append("<option value='" + response.StudentID + "'>" + response.student + "</option>");  // Populate student name and set the value
                    $('#StudentID').val(response.StudentID); // Set the selected value
                    for (var i = 0; i < response.Subjects.length; i++) {
                        $('#ClassSubjectID').append("<option value='" + response.Subjects[i].ClassSubjectID + "'>" + response.Subjects[i].Name + "</option>");
                    }
                    $('#ClassSubjectID').val(response.ClassID); // Assuming response contains ClassID and ProgrameID properties if needed
                    $('#ProgrameID').val(response.ProgrameID);
                }
            },
            error: function (xhr, status, error) {
                console.error(error);
            }
        });
    });

    $('#ClassSubjectID').change(function () {
        $.ajax({
            url: '@Url.Action("Gettotalmarks", "ExamMarksTables")',
            type: 'GET',
            data: { sid: $(this).val() },
            dataType: 'json',
            success: function (response) {
                if (response.error) {
                    console.error(response.error);
                    alert(response.error);
                } else {
                    $('#TotalMarks').val(response.data);
                }
            },
            error: function (xhr, status, error) {
                console.error(error);
            }
        });
    });
});
</script>


